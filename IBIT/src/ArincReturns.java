/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.Scanner;

/**
 *
 * @author dan
 */
@SuppressWarnings("serial")
public class ArincReturns extends javax.swing.JFrame {

	/**
	 * Creates new form ArincReturns
	 */
	private  String desktopPath;
	@SuppressWarnings("unchecked")
	public ArincReturns() {
		desktopPath="";
		try{
			desktopPath = System.getProperty("user.home") + "\\Desktop";
		}catch (Exception e){
		}

		initComponents();
		jList1.addMouseListener(mouseListener);
		jList2.addMouseListener(mouseListeners);
		Scanner fileScanner = null;
		try{
			FileInputStream file=new FileInputStream(new File(desktopPath+"\\IBIT\\Sites.txt"));
			fileScanner=new Scanner(file);
			while(fileScanner.hasNextLine()){
				String command=fileScanner.nextLine();	
				splitString = (command.split(","));
				for(int i=0;i<splitString.length;i++){
					FinalData.add(splitString[i]);
				}
			}
		}catch(Exception e){
			Excpetion newException=new Excpetion();
			newException.setText("Could not find Sites.txt");
			while(!newException.getDone()){
				newException.setVisible(true);
			}
			System.exit(0);
		}
		String str="";
		boolean grab=false;
		for(int i=0;i<FinalData.size();i++){
			if(grab){
				str=str+FinalData.get(i)+",";
				grab=false;
			}
			if(FinalData.get(i).toLowerCase().equals("network")){
				grab=true;
			}
		}

		String[] splitString=str.split(",");
		jList1.setListData(splitString);
		str="Enter Test Sites";
		splitString=str.split(" ");
		jList2.setListData(splitString);
		try{
			FileInputStream file=new FileInputStream(new File(desktopPath+"\\IBIT\\tests.txt"));
			fileScanner=new Scanner(file);
			while(fileScanner.hasNextLine()){
				String command=fileScanner.nextLine();	
				splitString = (command.split(","));
				for(int i=0;i<splitString.length;i++){
					boxData.add(splitString[i]);
				}
			}
		}catch(Exception e){
			Excpetion newException=new Excpetion();
			newException.setText("Could not find test.txt");
			while(!newException.getDone()){
				newException.setVisible(true);
			}
			System.exit(0);
		}
		try{
			jCheckBox1.setText(boxData.get(0));
			jCheckBox2.setText(boxData.get(2));
			jCheckBox3.setText(boxData.get(4));
			jCheckBox4.setText(boxData.get(6));
			jCheckBox5.setText(boxData.get(8));
			jCheckBox6.setText(boxData.get(10));
			jCheckBox7.setText(boxData.get(12));
			jCheckBox8.setText(boxData.get(14));
		}catch(Exception e){
			Excpetion newException=new Excpetion();
			newException.setText("Could not find test");
			while(!newException.getDone()){
				newException.setVisible(true);
			}
			System.exit(0);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings({ "unchecked", "rawtypes" })
	// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	private void initComponents() {

		jCheckBox1 = new javax.swing.JCheckBox();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jList1 = new javax.swing.JList();
		jScrollPane2 = new javax.swing.JScrollPane();
		jList2 = new javax.swing.JList();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jCheckBox2 = new javax.swing.JCheckBox();
		jCheckBox3 = new javax.swing.JCheckBox();
		jCheckBox4 = new javax.swing.JCheckBox();
		jCheckBox5 = new javax.swing.JCheckBox();
		jLabel4 = new javax.swing.JLabel();
		jButton3 = new javax.swing.JButton();
		jCheckBox6 = new javax.swing.JCheckBox();
		jCheckBox7 = new javax.swing.JCheckBox();
		jCheckBox8 = new javax.swing.JCheckBox();
		jScrollPane3 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();
		jButton4 = new javax.swing.JButton();
		jTextField1 = new javax.swing.JTextField();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jCheckBox1.setText("jCheckBox1");
		jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox1ActionPerformed(evt);
			}
		});

		jLabel1.setText("All Sites select one at a time");

		jLabel2.setText("Testing Sites");

		jLabel3.setText("Responses");

		jList1.setModel(new javax.swing.AbstractListModel() {
			String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
			public int getSize() { return strings.length; }
			public Object getElementAt(int i) { return strings[i]; }
		});
		jScrollPane1.setViewportView(jList1);

		jList2.setModel(new javax.swing.AbstractListModel() {
			String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
			public int getSize() { return strings.length; }
			public Object getElementAt(int i) { return strings[i]; }
		});
		jScrollPane2.setViewportView(jList2);

		jButton1.setText("Add");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jButton2.setText("Remove");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		jCheckBox2.setText("jCheckBox2");
		jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox2ActionPerformed(evt);
			}
		});

		jCheckBox3.setText("jCheckBox3");
		jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox3ActionPerformed(evt);
			}
		});

		jCheckBox4.setText("jCheckBox4");
		jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox4ActionPerformed(evt);
			}
		});

		jCheckBox5.setText("jCheckBox5");
		jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox5ActionPerformed(evt);
			}
		});

		jLabel4.setText("All Test Cases");

		jButton3.setText("Run Tests");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});

		jCheckBox6.setText("jCheckBox6");
		jCheckBox6.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox6ActionPerformed(evt);
			}
		});

		jCheckBox7.setText("jCheckBox7");
		jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox7ActionPerformed(evt);
			}
		});

		jCheckBox8.setText("jCheckBox8");
		jCheckBox8.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jCheckBox8ActionPerformed(evt);
			}
		});

		jTextArea1.setColumns(20);
		jTextArea1.setRows(5);
		jScrollPane3.setViewportView(jTextArea1);

		jButton4.setText("Write to path ");
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton4ActionPerformed(evt);
			}
		});

		jTextField1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jTextField1ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGap(37, 37, 37)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
												.addComponent(jCheckBox1)
												.addComponent(jLabel1))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(jCheckBox2))
												.addGroup(layout.createSequentialGroup()
														.addGap(47, 47, 47)
														.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
														.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																.addGroup(layout.createSequentialGroup()
																		.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(layout.createSequentialGroup()
																						.addGap(13, 13, 13)
																						.addComponent(jButton1))
																						.addComponent(jButton2))
																						.addGap(139, 139, 139)
																						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																								.addGroup(layout.createSequentialGroup()
																										.addComponent(jLabel2)
																										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																										.addComponent(jLabel3)
																										.addGap(277, 277, 277))
																										.addGroup(layout.createSequentialGroup()
																												.addGap(89, 89, 89)
																												.addComponent(jLabel4)
																												.addGap(86, 694, Short.MAX_VALUE))
																												.addGroup(layout.createSequentialGroup()
																														.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
																														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																														.addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
																														.addGap(92, 92, 92))))
																														.addGroup(layout.createSequentialGroup()
																																.addComponent(jCheckBox3)
																																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																																.addComponent(jCheckBox4)
																																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																																.addComponent(jCheckBox5)
																																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																																.addComponent(jCheckBox6)
																																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																																.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																																		.addGroup(layout.createSequentialGroup()
																																				.addComponent(jButton3)
																																				.addGap(0, 0, Short.MAX_VALUE))
																																				.addGroup(layout.createSequentialGroup()
																																						.addComponent(jCheckBox7)
																																						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																																						.addComponent(jCheckBox8)
																																						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																																						.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
																																						.addGap(161, 161, 161))))))
																																						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
																																								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																																								.addComponent(jButton4)
																																								.addGap(209, 209, 209))
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
						.addGap(190, 190, 190)
						.addComponent(jButton1)
						.addGap(73, 73, 73)
						.addComponent(jButton2)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 252, Short.MAX_VALUE)
						.addComponent(jLabel4)
						.addGap(70, 70, 70)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jCheckBox1)
								.addComponent(jCheckBox2)
								.addComponent(jCheckBox3)
								.addComponent(jCheckBox4)
								.addComponent(jCheckBox5)
								.addComponent(jCheckBox6)
								.addComponent(jCheckBox7)
								.addComponent(jCheckBox8))
								.addGap(35, 35, 35)
								.addComponent(jButton3)
								.addGap(36, 36, 36))
								.addGroup(layout.createSequentialGroup()
										.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(layout.createSequentialGroup()
														.addGap(70, 70, 70)
														.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
																.addComponent(jLabel1)
																.addComponent(jLabel2)
																.addComponent(jLabel3))
																.addGap(96, 96, 96)
																.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																		.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
																		.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
																		.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
																				.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
																				.addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addGap(108, 108, 108)))
																				.addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addGap(18, 18, 18)
																				.addComponent(jButton4)
																				.addGap(64, 64, 64))
				);

		pack();
	}// </editor-fold>                        

	private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
		box1=true;
	}                                          

	private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {                                           
		box2=true;
	}                                          

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
		try{
			add=true;
			sites=new ArrayList<String>();
			boolean grab=false;
			for(int i=0;i<FinalData.size();i++){
				if(!grab){
					if(FinalData.get(i).equals(itemSelected[0])){
						grab=true;
					}
				}else{ 
					if(FinalData.get(i).toLowerCase().equals("network")){
						grab=false;
						break;
					}else{
						sites.add(FinalData.get(i));
					}
				}
			}
		}catch(Exception e){

		}
	}                                        

	@SuppressWarnings("unchecked")
	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
		String[] items;
		try{
			for(int j=0;j<itemSelected2.length;j++){
				for(int i=0;i<testData.size();i++){
					try{
						if(testData.get(i).equals(itemSelected2[j])&&!testData.get(i+5).toLowerCase().equals("end")){
							while(!testData.get(i).toLowerCase().equals("end")){
								testData.remove(i);
							}
							testData.remove(i);
							break;
						}
					}catch(Exception e){
						if(testData.get(i).equals(itemSelected2[j])){
							while(!testData.get(i).toLowerCase().equals("end")){
								testData.remove(i);
							}
							testData.remove(i);
							break;
						}
					}
				}
			}
		}catch(Exception e){

		}
		if(testData.size()!=0){
			String str="";
			boolean grab=true;
			for(int i=0;i<testData.size();i++){
				if(grab){
					str=str+testData.get(i)+",";
					grab=false;
				}
				if(testData.get(i).toLowerCase().equals("end")){
					grab=true;
				}
			}
			items=str.split(",");
			jList2.setListData(items);
		}else{
			String[] strings = { "Enter Test sites" };
			jList2.setListData(strings);

		}
	}                                        

	private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {                                           
		box3=true;
	}                                          

	private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {                                           
		box4=true;
	}                                          

	private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {                                           
		box5=true;
	}                                          

	private void jCheckBox6ActionPerformed(java.awt.event.ActionEvent evt) {                                           
		box6=true;
	}                                          

	private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {                                           
		box7=true;
	}                                          

	private void jCheckBox8ActionPerformed(java.awt.event.ActionEvent evt) {                                           
		box8=true;
	}                                          

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
		run=true;
	}                                        

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) { 
		textArea=jTextField1.getText();
		save=true;
	}                                        

	private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
	}                                           
	MouseAdapter mouseListener = new MouseAdapter() {
		@SuppressWarnings("deprecation")
		public void mouseClicked(MouseEvent e) {
			itemSelected= jList1.getSelectedValues();
		}
	};
	MouseAdapter mouseListeners = new MouseAdapter() {
		@SuppressWarnings("deprecation")
		public void mouseClicked(MouseEvent e) {
			itemSelected2= jList2.getSelectedValues();
		}
	};
	public String getPath(){
		return textArea;
	}
	/**
	 * @param args the command line arguments
	 */
	private boolean save=false;
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ArincReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ArincReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ArincReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ArincReturns.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ArincReturns().setVisible(true);
			}
		});
	}
	private boolean add=false;
	public ArrayList<String> getsites(){
		return sites;
	}
	private String textArea="";
	private boolean box1=false;
	private boolean box2=false;
	private boolean box3=false;
	private boolean box4=false;
	private boolean box5=false;
	private boolean box6=false;
	private boolean box7=false;
	private boolean box8=false;
	private ArrayList<String> FinalData=new ArrayList<String>();
	private ArrayList<String> testData=new ArrayList<String>();
	private ArrayList<String> boxData=new ArrayList<String>();
	private ArrayList<String> sites=new ArrayList<String>();
	private Object[] itemSelected;
	private Object[] itemSelected2;
	private String[] splitString=null;
	@SuppressWarnings("unused")
	private String[] splitStrings={""};
	// Variables declaration - do not modify                     
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JCheckBox jCheckBox1;
	private javax.swing.JCheckBox jCheckBox2;
	private javax.swing.JCheckBox jCheckBox3;
	private javax.swing.JCheckBox jCheckBox4;
	private javax.swing.JCheckBox jCheckBox5;
	private javax.swing.JCheckBox jCheckBox6;
	private javax.swing.JCheckBox jCheckBox7;
	private javax.swing.JCheckBox jCheckBox8;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	@SuppressWarnings("rawtypes")
	private javax.swing.JList jList1;
	@SuppressWarnings("rawtypes")
	private javax.swing.JList jList2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JTextArea jTextArea1;
	private javax.swing.JTextField jTextField1;
	// End of variables declaration     
	public boolean getAdd() {
		return add;
	}
	public boolean getRun(){
		return run;
	}
	public void setAdd() {
		add=false;

	}
	private boolean run=false;
	@SuppressWarnings("unchecked")
	public void addToList(ArrayList<String> testData2) {
		String[] items;
		for(int i=0;i<testData2.size();i++){
			testData.add(testData2.get(i));
		}
		String str="";
		boolean grab=true;
		for(int i=0;i<testData.size();i++){
			if(grab){
				str=str+testData.get(i)+",";
				grab=false;
			}
			if(testData.get(i).toLowerCase().equals("end")){
				grab=true;
			}
		}
		items=str.split(",");
		jList2.setListData(items);
	}
	public boolean getBox1(){
		return box1;
	}
	public boolean getBox2(){
		return box2;
	}
	public boolean getBox3(){
		return box3;
	}
	public boolean getBox4(){
		return box4;
	}
	public boolean getBox5(){
		return box5;
	}
	public boolean getBox6(){
		return box6;
	}
	public boolean getBox7(){
		return box7;
	}
	public boolean getBox8(){
		return box8;
	}
	public ArrayList<String> getTestData(){
		return testData;
	}
	public void setText(String str){
		jTextArea1.setText(str);
	}


	public ArrayList<String> getData() {
		// TODO Auto-generated method stub
		return boxData;
	}

	public boolean getSave() {
		// TODO Auto-generated method stub
		return save;
	}
}
